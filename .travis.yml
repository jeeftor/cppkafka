language: cpp
sudo: required


compiler:
  - gcc
  # - clang

env:
  # - RDKAFKA_VERSION=0.9.4
  - RDKAFKA_VERSION=1.5.0 # Latest RDKafka

os:
  # - linux
  - windows



# jobs:
#   include:
#     - os: linux
#       name: Kafkaookie
#       before_script:
#         - KAFKA_VERISON=kafka_2.12-2.5.0
#         - KAFKA_URL=https://www.apache.org/dyn/closer.cgi?path=/kafka/2.5.0/kafka_2.12-2.5.0.tgz
#         - wget $KAFKA_URL
#         - tar xvzf $KAFKA_VERISON.tgz
#         - ./kafka_$KAFKA_VERSION/bin/kafka-server-start.sh ./kafka_$KAFKA_VERSION/config/server.properties > /dev/null 2> /dev/null &
#         -  while ! echo "asd" | nc localhost 9092; do sleep 1; done
#         - ./kafka_$KAFKA_VERSION/bin/kafka-topics.sh --create --zookeeper localhost:2181 --topic cppkafka_test1 --partitions 3 --replication-factor 1
#         - ./kafka_$KAFKA_VERSION/bin/kafka-topics.sh --create --zookeeper localhost:2181 --topic cppkafka_test2 --partitions 3 --replication-factor 1


before_script:
  # - choco install -y server-jre --debug --verbose
  - choco install -y adoptopenjdk12jre --verbose
  - java
  # - java -version
  # - wget -q http://apache.mirrors.hoobly.com/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz
  # - wget -q http://apache.mirrors.hoobly.com/kafka/2.5.0/kafka_2.13-2.5.0.tgz
  # # - wget -q http://packages.confluent.io/archive/5.5/confluent-community-5.5.1-2.12.zip
  # - unzip confluent-community-5.5.1-2.12.zip
  # - ./confluent-5.5.1/bin/windows/kafka-server-start.bat ./confluent-5.5.1/etc/kafka/server.properties

script:
  - java
# poobefore_script:
#   - |-
#     case $TRAVIS_OS_NAME in
#       windows)
#         wget -q http://packages.confluent.io/archive/5.5/confluent-community-5.5.1-2.12.zip
#         dir *.zip
#         unzip confluent-5.5.1-2.12.zip

#         # git clone https://github.com/Microsoft/vcpkg.git
#         # cd vcpkg
#         # dir
#         # ./bootstrap-vcpkg.bat
#         # ./vcpkg integrate install

#         # # Install librdkafka
#         # ./vcpkg install librdkafka pthread --triplet x64-windows
#         # cd ..
#         # ;;
#       linux )
#         echo "Running Linux"
#         VERSION="1.5.0" && wget https://github.com/edenhill/librdkafka/archive/v${VERSION}.tar.gz \
#     && tar -xzf v${VERSION}.tar.gz \
#     && rm v${VERSION}.tar.gz \
#     && cd librdkafka-${VERSION}/ \
#     && echo "# enabled for compatability with afsim " >> CMakeLists.txt \
#     && echo "add_definitions(-D_GLIBCXX_USE_CXX11_ABI=0)" >> CMakeLists.txt \
#     && cmake . \
#     && make \
#     && sudo make install
#         ;;
#     esac


# matrix:
#   include:
#     - os: linux
#       script:
#         - env
#     - os: windows
#       script:
#         - set

# kafka:
#   - 2.11-2.2.0

# before_install:
# - |-
#     case $TRAVIS_OS_NAME in
#       windows)
#         [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
#         choco uninstall -y mingw
#         choco upgrade --no-progress -y msys2
#         export msys2='cmd //C RefreshEnv.cmd '
#         export msys2+='& set MSYS=winsymlinks:nativestrict '
#         export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
#         export mingw64="$msys2 -mingw64 -full-path -here -c "\"\$@"\" --"
#         export msys2+=" -msys2 -c "\"\$@"\" --"
#         $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-toolchain
#         ## Install more MSYS2 packages from https://packages.msys2.org/base here
#         taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
#         export PATH=/C/tools/msys64/mingw64/bin:$PATH
#         export MAKE=mingw32-make  # so that Autotools can find it
#         ;;    
#     esac


n_script:
  - |-
    case $TRAVIS_OS_NAME in
      windows)
      dir
      # cmake -DCPPKAFKA_DISABLE_TESTS=ON -DCPPKAFKA_DISABLE_EXAMPLES=ON .
      # make
    ;;
    esac


addons:
  apt:
    packages:
    - libboost-dev
    - libboost-program-options-dev
    - zookeeper
    - zookeeperd
    - wget
    - cmake

# before_script:
#   - KAFKA_VERSION=2.11-2.2.0
#   - sudo apt install -y wget || sudo apt-get install -y wget
#   - echo "Cloning: http://apache.cs.utah.edu/kafka/2.2.0/kafka_$KAFKA_VERSION.tgz"
#   - wget http://apache.cs.utah.edu/kafka/2.2.0/kafka_$KAFKA_VERSION.tgz
#   - tar xvzf kafka_$KAFKA_VERSION.tgz
#   - ./kafka_$KAFKA_VERSION/bin/kafka-server-start.sh ./kafka_$KAFKA_VERSION/config/server.properties > /dev/null 2> /dev/null &
#   - git clone https://github.com/edenhill/librdkafka.git
#   - while ! echo "asd" | nc localhost 9092; do sleep 1; done
#   - ./kafka_$KAFKA_VERSION/bin/kafka-topics.sh --create --zookeeper localhost:2181 --topic cppkafka_test1 --partitions 3 --replication-factor 1
#   - ./kafka_$KAFKA_VERSION/bin/kafka-topics.sh --create --zookeeper localhost:2181 --topic cppkafka_test2 --partitions 3 --replication-factor 1

# script:
#   - cd librdkafka
#   - git checkout $RDKAFKA_VERSION
#   - ./configure --prefix=./install && make libs && make install
#   - cd ..
#   - mkdir build && cd build
#   - cmake .. -DCPPKAFKA_CMAKE_VERBOSE=ON -DRDKAFKA_ROOT=./librdkafka/install -DKAFKA_TEST_INSTANCE=localhost:9092
#   - make examples
#   - make tests
#   - ./tests/cppkafka_tests
